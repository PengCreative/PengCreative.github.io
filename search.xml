<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于JSP-JavaScript-servlet-jdbc技术的自助存取款系统小案例</title>
      <link href="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/"/>
      <url>/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="一、语言和环境"><a href="#一、语言和环境" class="headerlink" title="一、语言和环境:"></a>一、语言和环境:</h3><p><strong>JDK1.8</strong>、<strong>Eclipse</strong>、<strong>Tomcat7</strong>、<strong>MySQL5.7</strong></p><h3 id="二、数据库设计："><a href="#二、数据库设计：" class="headerlink" title="二、数据库设计："></a>二、数据库设计：</h3><p><strong>数据库名称：ebank</strong></p><p><strong>数据库表信息，如下表：</strong></p><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/ebank.png" alt></p><h3 id="三、要求"><a href="#三、要求" class="headerlink" title="三、要求"></a>三、要求</h3><p> <strong>基于JSP+servlet+jdbc技术的自助存取款系统包含如下功能：</strong></p><ul><li><p><strong>登录功能</strong></p></li><li><p><strong>存款功能</strong></p></li><li><p><strong>l取款功能</strong> </p></li></ul><h3 id="完成说明："><a href="#完成说明：" class="headerlink" title="完成说明："></a>完成说明：</h3><h4 id="1）初始界面为登录功能，根据account表中的账号和密码进行登录。"><a href="#1）初始界面为登录功能，根据account表中的账号和密码进行登录。" class="headerlink" title="1）初始界面为登录功能，根据account表中的账号和密码进行登录。"></a>1）初始界面为登录功能，根据account表中的账号和密码进行登录。</h4><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/login.png" alt></p><h4 id="2）账号和密码前端验证功能"><a href="#2）账号和密码前端验证功能" class="headerlink" title="2）账号和密码前端验证功能"></a>2）账号和密码前端验证功能</h4><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/1.png" alt></p><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/2.png" alt></p><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/3.png" alt></p><h4 id="3）当用户名和密码正确后显示存款取款页面。当取款金额大于余额时显示交易失败。存款金额为每次十元到一万元范围。"><a href="#3）当用户名和密码正确后显示存款取款页面。当取款金额大于余额时显示交易失败。存款金额为每次十元到一万元范围。" class="headerlink" title="3）当用户名和密码正确后显示存款取款页面。当取款金额大于余额时显示交易失败。存款金额为每次十元到一万元范围。"></a>3）当用户名和密码正确后显示存款取款页面。当取款金额大于余额时显示交易失败。存款金额为每次十元到一万元范围。</h4><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/mon.png" alt></p><h4 id="4）-项目结构"><a href="#4）-项目结构" class="headerlink" title="4） 项目结构"></a>4） 项目结构</h4><p><img src="/2020/05/14/%E5%9F%BA%E4%BA%8EJSP-JavaScript-servlet-jdbc%E6%8A%80%E6%9C%AF%E7%9A%84%E8%87%AA%E5%8A%A9%E5%AD%98%E5%8F%96%E6%AC%BE%E7%B3%BB%E7%BB%9F%E5%B0%8F%E6%A1%88%E4%BE%8B/path.png" alt></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><h4 id="ebank-sql：数据库脚本"><a href="#ebank-sql：数据库脚本" class="headerlink" title="ebank.sql：数据库脚本"></a>ebank.sql：数据库脚本</h4><pre><code class="mysql">DROP TABLE IF EXISTS `account`;CREATE TABLE `account` (  `accountid` char(16) NOT NULL,  `password` char(6) NOT NULL,  `money` double NOT NULL,  PRIMARY KEY (`accountid`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;INSERT INTO `account` VALUES (&#39;1111111111111111&#39;, &#39;111111&#39;, &#39;9300&#39;);INSERT INTO `account` VALUES (&#39;1122334455667788&#39;, &#39;154720&#39;, &#39;4600&#39;);</code></pre><h4 id="Account-java：实体类"><a href="#Account-java：实体类" class="headerlink" title="Account.java：实体类"></a>Account.java：实体类</h4><pre><code class="java">public class Account {    private String accountid;//账号    private String password;//密码    private double money;//余额    public Account(String accountid, String password, double money) {        this.accountid = accountid;        this.password = password;        this.money = money;    }    public Account() {    }    public String getAccountid() {        return accountid;    }    public void setAccountid(String accountid) {        this.accountid = accountid;    }    public String getPassword() {        return password;    }    public void setPassword(String password) {        this.password = password;    }    public double getMoney() {        return money;    }    public void setMoney(double money) {        this.money = money;    }}</code></pre><h4 id="BaseDao-java-进行数据库连接"><a href="#BaseDao-java-进行数据库连接" class="headerlink" title="BaseDao.java: 进行数据库连接"></a>BaseDao.java: 进行数据库连接</h4><pre><code class="java">public class BaseDao {    private final static String URL = &quot;jdbc:mysql://localhost:3306/ebank?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&quot;; //3306是MySQL5.7默认端口    private final static String DRIVER_CLASS = &quot;com.mysql.jdbc.Driver&quot;;    private final static String UNAME = &quot;root&quot;;//root用户    private final static String UPASS = &quot;154720&quot;;//密码    protected Connection con;    protected PreparedStatement ps;    protected ResultSet rs;    // 1.取得数据连接 @return Connection    public Connection getCon() {        try {            Class.forName(DRIVER_CLASS);            con = DriverManager.getConnection(URL, UNAME, UPASS);        } catch (ClassNotFoundException e) {            e.printStackTrace();        } catch (SQLException e) {            e.printStackTrace();        }        return con;    }    // 2.关闭数据连接相关对象    public static void closeAll(ResultSet rs, Statement st, Connection con) {        try {            if (rs != null)                rs.close();            if (st != null)                st.close();            if (con != null)                con.close();        } catch (SQLException e) {            e.printStackTrace();        }    }    public int executeSQL(String sql, Object[] param) {        int rows = 0;        try {            con = getCon();            ps = con.prepareStatement(sql);            if (param != null) {                for (int i = 0; i &lt; param.length; i++) {                    // 数据库兼容其它类型转为为string型                    ps.setString(i + 1, param[i].toString());                }            }            rows = ps.executeUpdate();        } catch (SQLException e) {            e.printStackTrace();        } finally {            closeAll(null, ps, con);        }        return rows;    }}</code></pre><h4 id="AcountDAO-java：数据库操作类，完成登录，存款，取款功能"><a href="#AcountDAO-java：数据库操作类，完成登录，存款，取款功能" class="headerlink" title="AcountDAO.java：数据库操作类，完成登录，存款，取款功能"></a>AcountDAO.java：数据库操作类，完成登录，存款，取款功能</h4><pre><code class="java">public class AcountDao extends BaseDao {    // 判断账号密码是否正确    public Account getLongin(String accountid, String password) {        Account account = null;        String sql = &quot;select * from account where accountid=? and password=?&quot;;        Connection con = getCon();        PreparedStatement pstmt = null;        ResultSet rs = null;        try {            pstmt = con.prepareStatement(sql);            pstmt.setString(1, accountid);            pstmt.setString(2, password);            rs = pstmt.executeQuery();            if (rs.next()) {                double money = rs.getDouble(&quot;money&quot;);                account = new Account(accountid, password, money);            }        } catch (SQLException e) {            e.printStackTrace();        } finally {            closeAll(rs, pstmt, con);        }        return account;    }    // 根据账号得到该账号的所有信息    public Account getAccountById(String accountid) {        Account account = null;        String sql = &quot;select * from account where accountid=?&quot;;        Connection con = getCon();        PreparedStatement pstmt = null;        ResultSet rs = null;        try {            pstmt = con.prepareStatement(sql);            pstmt.setString(1, accountid);            rs = pstmt.executeQuery();            if (rs.next()) {                String password = rs.getString(&quot;password&quot;);                double money = rs.getDouble(&quot;money&quot;);                account = new Account(accountid, password, money);            }        } catch (Exception e) {            e.printStackTrace();        } finally {            closeAll(rs, pstmt, con);        }        return account;    }    // 实现取款、存款功能的方法    public boolean updateMoneyById(String accountid, double money) {        boolean flag = false;        String sql = &quot;update account set money=? where accountid=?&quot;;        con = super.getCon();        try {            ps = con.prepareStatement(sql);            ps.setDouble(1, money);            ps.setString(2, accountid);            int a = ps.executeUpdate();// 得到更新行数            // 当没有更新的时候返回0            if (a != 0) {                flag = true;            }        } catch (SQLException e) {            e.printStackTrace();        } finally {            super.closeAll(rs, ps, con);        }        return flag;    }}</code></pre><h4 id="login-jsp-内容包括：javascript判断用户名和密码是否为空以及输入的用户名和密码长度是否符合要求"><a href="#login-jsp-内容包括：javascript判断用户名和密码是否为空以及输入的用户名和密码长度是否符合要求" class="headerlink" title="login.jsp: 内容包括：javascript判断用户名和密码是否为空以及输入的用户名和密码长度是否符合要求"></a>login.jsp: 内容包括：javascript判断用户名和密码是否为空以及输入的用户名和密码长度是否符合要求</h4><pre><code class="jsp">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;title&gt;自助存取款系统&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;table {    width: 350px;    height: 150px;}tr, td, th, input {    font-weight: bold;}.input {    width: 200px;    height: 25px}&lt;/style&gt;&lt;script&gt;    function Login() {        var accountid = document.getElementById(&quot;accountid&quot;).value;        var password = document.getElementById(&quot;password&quot;).value;        if (accountid.trim() == &quot;&quot; &amp;&amp; password.trim() == &quot;&quot;) {            alert(&quot;用户名和密码不能为空&quot;);            return false;        } else if (accountid.trim() == &quot;&quot; &amp;&amp; password.trim() != &quot;&quot;) {            alert(&quot;用户名不能为空&quot;);            return false;        } else if (password.trim() == &quot;&quot; &amp;&amp; accountid.trim() != &quot;&quot;) {            alert(&quot;密码不能为空&quot;);            return false;        } else if (accountid.length &lt; 16) {            alert(&quot;请输入16位数账号&quot;);            return false;        } else if (password.length &lt; 6) {            alert(&quot;请输入6位数密码&quot;);            return false;        }        return true;    }&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;h2 align=&quot;center&quot;&gt;        &lt;font color=red&gt;自助存取款系统&lt;/font&gt;    &lt;/h2&gt;    &lt;form action=&quot;LoginServlet&quot; method=&quot;post&quot; name=&quot;loginform&quot;&gt;        &lt;table align=&quot;center&quot; border=&quot;3&quot;&gt;            &lt;tr&gt;                &lt;th align=&quot;left&quot; bgcolor=&quot;cornflowerblue&quot; colspan=&quot;3&quot;&gt;账号:&lt;/th&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;!-- onkeyup=&quot;this.value=this.value.replace(/[^0-9.]/g,&#39;&#39;)正则表达式限制输入的只能是数字且不能为空 --&gt;                &lt;td&gt;&lt;input class=&quot;input&quot; type=&quot;text&quot; name=&quot;accountid&quot;                    id=&quot;accountid&quot; maxlength=&quot;16&quot; placeholder=&quot;请输入16位数账号密码&quot;                    onkeyup=&quot;this.value=this.value.replace(/[^0-9.]/g,&#39;&#39;)&quot;&gt;&lt;/td&gt;                &lt;td width=&quot;100px&quot; height=&quot;50px&quot;&gt;&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;th align=&quot;left&quot; bgcolor=&quot;cornflowerblue&quot; colspan=&quot;2&quot;&gt;密码:&lt;/th&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;&lt;input class=&quot;input&quot; type=&quot;password&quot; name=&quot;password&quot;                    id=&quot;password&quot; maxlength=&quot;6&quot; placeholder=&quot;请输入6位数密码&quot;                    onkeyup=&quot;this.value=this.value.replace(/[^0-9.]/g,&#39;&#39;)&quot;&gt;&lt;/td&gt;                &lt;td width=&quot;100px&quot; height=&quot;50px&quot;&gt;&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td align=&quot;center&quot; colspan=&quot;2&quot;&gt;                    &lt;/center&gt; &lt;input style=&quot;background: cornflowerblue;&quot; type=&quot;submit&quot;                    value=&quot;登录&quot; name=&quot;login&quot; onclick=&quot;return Login()&quot;&gt;                &lt;/td&gt;            &lt;/tr&gt;        &lt;/table&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="LoginServlet-java：验证login-jsp页面输入用户名和密码是否存在于数据库，存在就跳转deal-jsp，否则登录失败提示“登陆失败，请重新登陆”并返回登录界面"><a href="#LoginServlet-java：验证login-jsp页面输入用户名和密码是否存在于数据库，存在就跳转deal-jsp，否则登录失败提示“登陆失败，请重新登陆”并返回登录界面" class="headerlink" title="LoginServlet.java：验证login.jsp页面输入用户名和密码是否存在于数据库，存在就跳转deal.jsp，否则登录失败提示“登陆失败，请重新登陆”并返回登录界面"></a>LoginServlet.java：验证login.jsp页面输入用户名和密码是否存在于数据库，存在就跳转deal.jsp，否则登录失败提示“登陆失败，请重新登陆”并返回登录界面</h4><pre><code class="java">@WebServlet(&quot;/LoginServlet&quot;)public class LoginServlet extends HttpServlet {    private static final long serialVersionUID = 1L;    public LoginServlet() {        super();    }    protected void doGet(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath());    }    protected void doPost(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        response.setContentType(&quot;text/html&quot;);        request.setCharacterEncoding(&quot;utf-8&quot;);        response.setCharacterEncoding(&quot;utf-8&quot;);        PrintWriter out = response.getWriter();        String accountid = request.getParameter(&quot;accountid&quot;);// 获取账号        String password = request.getParameter(&quot;password&quot;);// 获取密码        Account account = new Account();        AcountDao acountdao = new AcountDao();        if (accountid != null &amp;&amp; password != null) {            if (acountdao.getLongin(accountid, password) != null) {                request.getRequestDispatcher(&quot;deal.jsp&quot;).forward(request, response);            } else {                out.print(                        &quot;&lt;script type=\&quot;text/javascript\&quot;&gt;alert(\&quot;登陆失败，请重新登陆\&quot;);window.location.replace(\&quot;http://localhost:8080/eBank/login.jsp\&quot;);&lt;/script&gt;&quot;);            }        }    }}</code></pre><h4 id="deal-jsp：-存取款界面，具有显示账号和余额、选择存取款操作功能，javascript代码判断用户是选择取款还是存款以及输入金额是否符合要求"><a href="#deal-jsp：-存取款界面，具有显示账号和余额、选择存取款操作功能，javascript代码判断用户是选择取款还是存款以及输入金额是否符合要求" class="headerlink" title="deal.jsp： 存取款界面，具有显示账号和余额、选择存取款操作功能，javascript代码判断用户是选择取款还是存款以及输入金额是否符合要求"></a>deal.jsp： 存取款界面，具有显示账号和余额、选择存取款操作功能，javascript代码判断用户是选择取款还是存款以及输入金额是否符合要求</h4><pre><code class="jsp">&lt;%@page import=&quot;com.gupt.account.AcountDao&quot;%&gt;&lt;%@page import=&quot;com.gupt.account.Account&quot;%&gt;&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=utf-8&quot;    pageEncoding=&quot;utf-8&quot;%&gt;&lt;%@page import=&quot;com.gupt.account.*&quot;%&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;title&gt;欢迎进入银行存储系统&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;table {    width: 500px;    height: 250px;    table-layout: fixed;}tr, td, input {    font-weight: bold;}&lt;/style&gt;&lt;script type=&quot;text/javascript&quot;&gt;    function getMoney() {        var updateMoney = document.getElementById(&quot;updateMoney&quot;).value;//得到取款或者存款的金额        var money = document.getElementById(&quot;money&quot;).value;//得到余额        var radioList = document.getElementsByName(&quot;radio&quot;);//返回名称为radio的对象的集合。        var radiovalue = &quot;&quot;;        //遍历radioList        for (var i = 0; i &lt; radioList.length; i++) {            if (radioList[i].checked) {                radiovalue = radioList[i].value;//赋值                break;            }        }        if (radiovalue == &quot;&quot;) {            alert(&quot;请选择取款或者存款后再提交&quot;);            return false;        }        if (updateMoney.trim() == &quot;&quot;) {            alert(&quot;金额不能为空&quot;);            return false;        }        if (radiovalue == &quot;取款&quot; &amp;&amp; updateMoney.value &gt; money) {            alert(&quot;交易失败!!!&quot; + &quot;\n&quot; + &quot;取款金额不能超过余额&quot; + &quot;金额:&quot; + updateMoney + &quot;余额:&quot;                    + money);            return false;        }        if (radiovalue == &quot;存款&quot; &amp;&amp; (updateMoney&lt;10 || updateMoney&gt;10000)) {            alert(&quot;存款金额为每次十元到一万元&quot;);            return false;        }        return true;    }&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;div align=&quot;center&quot;&gt;        &lt;h1&gt;自助存储系统&lt;/h1&gt;        &lt;form action=&quot;UpdateMoneyServlet&quot; method=&quot;post&quot;&gt;            &lt;table border=&quot;3px&quot;; &gt;                &lt;tr&gt;                    &lt;%                        String id = request.getParameter(&quot;accountid&quot;);                        AcountDao acountDao = new AcountDao();                        Account account = acountDao.getAccountById(id);                        String accountid = account.getAccountid();                        double money = account.getMoney();                    %&gt;                    &lt;td colspan=&quot;3&quot; bgcolor=&quot;cornflowerblue&quot;&gt;当前账号：&lt;%=accountid%&gt;&lt;/td&gt;                    &lt;input type=&quot;hidden&quot; name=&quot;accountid&quot; value=&quot;&lt;%=accountid%&gt;&quot;&gt;                    &lt;td colspan=&quot;3&quot; bgcolor=&quot;cornflowerblue&quot;&gt;余额：&lt;%=money%&gt;&lt;/td&gt;                    &lt;input type=&quot;hidden&quot; id=&quot;money&quot; name=&quot;money&quot; value=&quot;&lt;%=money%&gt;&quot;&gt;                &lt;/tr&gt;                &lt;tr&gt;                    &lt;td colspan=&quot;6&quot;&gt;选择交易类型:&lt;/td&gt;                &lt;/tr&gt;                &lt;tr&gt;                    &lt;td colspan=&quot;3&quot;&gt;&lt;input type=&quot;radio&quot; id=&quot;radio&quot; name=&quot;radio&quot;                        value=&quot;取款&quot; /&gt;取款&lt;/td&gt;                    &lt;td colspan=&quot;3&quot;&gt;&lt;input type=&quot;radio&quot; id=&quot;radio&quot; name=&quot;radio&quot;                        value=&quot;存款&quot; /&gt;存款&lt;/td&gt;                &lt;/tr&gt;                &lt;tr&gt;                    &lt;td colspan=&quot;6&quot;&gt;金额:&lt;/td&gt;                &lt;/tr&gt;                &lt;tr&gt;                    &lt;td colspan=&quot;3&quot;&gt;&lt;input id=&quot;updateMoney&quot; name=&quot;updateMoney&quot;                        size=&quot;32&quot; placeholder=&quot;请输入金额&quot; type=&quot;number&quot; /&gt;&lt;/td&gt;                    &lt;td colspan=&quot;3&quot;&gt;元&lt;/td&gt;                &lt;/tr&gt;                &lt;tr&gt;                    &lt;td colspan=&quot;6&quot; align=&quot;center&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;                        onclick=&quot;return getMoney()&quot; /&gt;&lt;/td&gt;                &lt;/tr&gt;            &lt;/table&gt;        &lt;/form&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="UpdateMoneyServlet-java：进行取款和存款的业务操作并且跳转到result-jsp界面"><a href="#UpdateMoneyServlet-java：进行取款和存款的业务操作并且跳转到result-jsp界面" class="headerlink" title="UpdateMoneyServlet.java：进行取款和存款的业务操作并且跳转到result.jsp界面"></a>UpdateMoneyServlet.java：进行取款和存款的业务操作并且跳转到result.jsp界面</h4><pre><code class="java">@WebServlet(&quot;/UpdateMoneyServlet&quot;)public class UpdateMoneyServlet extends HttpServlet {    private static final long serialVersionUID = 1L;    public UpdateMoneyServlet() {        super();    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath());    }    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        response.setContentType(&quot;tex/html&quot;);        response.setCharacterEncoding(&quot;utf-8&quot;);        request.setCharacterEncoding(&quot;utf-8&quot;);        PrintWriter out = response.getWriter();        //得到radio单选框的属性value值（取款或存款）        String radiovalue=request.getParameter(&quot;radio&quot;);        String accountid=request.getParameter(&quot;accountid&quot;);//获取账号        //获取账户中的余额，并转为double类型        String moneynum=request.getParameter(&quot;money&quot;);        double money= Double.valueOf(moneynum.toString());        //获取deal.jsp界面name值为updateMoney的input中输入的存款或者取款的金额        String  money2=request.getParameter(&quot;updateMoney&quot;);        //把获取的存款或者取款的金额转为double型        double updateMoney= Double.valueOf(money2.toString());        AcountDao acountDao=new AcountDao();        double moneySum;        //判断radiovalue的值是取款还是存款，并执行相应运算        switch(radiovalue){        case &quot;取款&quot; :        if (updateMoney&lt;=money) {//当取款金额小于等于余额时进行取款                moneySum =  money-updateMoney ;//取款运算                //调用updateMoneyById方法更新余额，并判断boolean值,true就跳到交易成功界面                boolean a = acountDao.updateMoneyById(accountid, moneySum);                if (a == true) {                    response.sendRedirect(&quot;result.jsp&quot;);                }            }         break;        case &quot;存款&quot; :            if (updateMoney&gt;=10&amp;&amp;updateMoney&lt;=10000) {//存款金额为每次十元到一万元范围                moneySum=money+updateMoney;//存款运算                boolean b = acountDao.updateMoneyById(accountid, moneySum);                if (b == true) {                    response.sendRedirect(&quot;result.jsp&quot;);                }            }            break;        }    }}</code></pre><h4 id="result-jsp：-交易成功界面"><a href="#result-jsp：-交易成功界面" class="headerlink" title="result.jsp： 交易成功界面"></a>result.jsp： 交易成功界面</h4><pre><code class="jsp">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@page import=&quot;javax.swing.JOptionPane&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;交易成功&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;h1&gt;交易成功！&lt;/h1&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        function logout() {            if (confirm(&quot; 您查看的网页正在试图关闭窗口。&quot; + &quot; \n &quot; + &quot;是否关闭此窗口？&quot;)) {                  //跳转到存取款界面                window.location.href = &quot;javascript:history.back();&quot;;            }        }    &lt;/script&gt;    &lt;a onclick=&quot;logout()&quot;&gt;关闭窗口&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><a href="https://pan.baidu.com/s/1RyydNwQhfK3ntEFEmRYEBw" target="_blank" rel="noopener">项目源代码下载</a></p><p><strong>提取码：y8hr</strong> </p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaEE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java爱心代码</title>
      <link href="/2020/05/11/Java%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/"/>
      <url>/2020/05/11/Java%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="程序员的浪漫之使用Java-GUI编程实现笛卡尔心形曲线"><a href="#程序员的浪漫之使用Java-GUI编程实现笛卡尔心形曲线" class="headerlink" title="程序员的浪漫之使用Java GUI编程实现笛卡尔心形曲线"></a>程序员的浪漫之使用Java GUI编程实现<strong>笛卡尔心形曲线</strong></h3><p><strong>代码如下：</strong></p><pre><code class="java">import java.awt.Color;import java.awt.Graphics;import java.awt.Image;import java.awt.Toolkit;import javax.swing.JFrame;public class Heart extends JFrame {    int WIDTH = 500;    int HEIGHT = 600;    private static int WINDOW_WIDTH = Toolkit.getDefaultToolkit().getScreenSize().width;    private static int WINDOW_HEIGHT = Toolkit.getDefaultToolkit().getScreenSize().height;    public Heart() {        super(&quot;爱心&quot;);        this.setBackground(Color.black);        this.setLocation((WINDOW_WIDTH - WIDTH) / 2, (WINDOW_HEIGHT - HEIGHT) / 2);        this.setSize(WIDTH, HEIGHT);        this.setLayout(getLayout());        this.setVisible(true);        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);    }    public void paint(Graphics g) {        double x, y, r;        Image image = this.createImage(WIDTH, HEIGHT);        Graphics pic = image.getGraphics();        for (int i = 0; i &lt; 92; i++) {            for (int j = 0; j &lt; 100; j++) {                r = Math.PI / 45 + Math.PI / 45 * i * (1 - Math.sin(Math.PI / 45 * j)) * 18;                x = r * Math.cos(Math.PI / 45 * j) * Math.sin(Math.PI / 45 * i) + WIDTH / 2;                y = -r * Math.sin(Math.PI / 45 * j) + HEIGHT / 2;                pic.setColor(Color.MAGENTA);                pic.fillOval((int) x, (int) y, 2, 2);            }            g.drawImage(image, 0, 0, this);        }    }    public static void main(String[] args) {        new Heart();    }}</code></pre><p><strong>效果如下：</strong></p><p><img src="/2020/05/11/Java%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/%E7%88%B1%E5%BF%83.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java GUI </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
